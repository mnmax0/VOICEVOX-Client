#c| Cchange  話速:1.4
#c| set _y   話者:四国めたん タイプ:あまあま 話速:1.4 音高:0.0 抑揚:1.0 音量:1.0 開始無音:0.1 終了無音:0.1
#c| set _z   話者:ずんだもん タイプ:あまあま 話速:1.4 音高:0.0 抑揚:1.0 音量:1.0 開始無音:0.1 終了無音:0.1
こんにちはNM Maxです
DS18B20という 防水デジタルサーマルプローブ を使ってみました。
これすごいのは、個々にIDもってて、信号線を複数つないで動作しちゃう。配線が非常に楽です。
4つ購入してあるのですが、2つを接続しました。
#c| newChapter
購入した時は、端子部、こんな感じなのですが、
#c| newChapter
ピンをはんだ付けしてブレッドボードにさしやすくしました。ショートしないようにグルーガンで固めてます。
#c| newChapter
Picoへの配線はこうしました。電源とGNDと信号線です。２つのDS18B20を同じ端子につないでます。
#c| newChapter
ブレッドボードはこんな感じで混雑してます。
#c| newChapter
比較のためにDHT11ものせたままになってます。
#c| newChapter
#c| print ライブラリのソース　https://github.com/pycom/pycom-libraries/blob/master/examples/DS18X20/onewire.py
DS18B20用のライブラリも用意されてたので、非常に簡単に動かすことができました。
#c| newChapter
#c| print ライブラリのソース　https://micropython-docs-ja.readthedocs.io/ja/latest/esp8266/tutorial/onewire.html
そのライブラリを使ったサンプルもあったので、それを元に動かしてみました。 ここによると750ミリ秒は測定命令送ってから待って、値を確認するのが良いようです。
#c| newChapter
#c| print 必要な待ち時間の表 https://github.com/robert-hh/Onewire_DS18X20
分解能で必要な待ち時間違うようです。分解能での待ち時間の表がここにありました。今回使ったのと別のライブラリのサイトです。
#c| newChapter
「DS18B20 技術資料」でググると詳しい情報も出てきました。ライブラリあるので、そこまで調べなくても使えちゃうのですが。
それでは、作ったものを動かしてみます。
#c| newChapter
こんな感じで、２つの温度センサーの値を配列でとれました。
今回は、DHT11とは別のセンサー、DS18B20を動かしてみました。
数年前から、発酵が趣味になってて、米糀作りとかに、このセンサーとワンボードマイコン使いたいとおもってて、このプローブも使ってみました。
熱源のオンオフ用に、リレー、ヒューズホルダーも購入したのですが、スマートスイッチの方が安心な気もして、まだどうするか決めてません。
どうやら、熱源に対してスマートスイッチ使うのはアウトらしいのですが、自作のリレーとヒューズ、どっちが安心なのかを考えると、って感じで悩み中です。
ヨーグルトメーカーとかも、簡単に作れそうですよね。
それではまたね！
